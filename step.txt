G-LockON動作の流れ

1.
各変数の定義

2.
createDatagramSocket()を呼びソケットの作成

3.
スタートボタンを認識し、サーバのIP、Port番号等の登録、STUNServerClientクラスのstunServerClientStart()を呼ぶ

4.
STUNsenderを並列スレッドで実行

5.
sender内でreceverを起動する

6.
データを受け取り、受け取った情報をIP、Portに分ける

7.
mainのonGetGlobalIP_Port()
これの引数はSTUNサーバから返ってきたやつ
（６で分割したやつ）

8.
publicIP,publicPortは引数の情報を登録する
privateIPはmain内のGetPrivateIP()を使う
privatePortはDatagramSocketクラス（main内ではsocketというインスタンス）のメソッドを使い取得

P2P
9.
P2Pクラスのインスタンスの生成
setUpMemory()を呼び出し、CSVに出力するための設定を行う

10.
receiverの並列開始

11.
P2PReceiver内でプロセスタイプと同名の定数の定義をし、データを受け取る

12.
受け取ったデータをString型に変換し、識別子からプロセスタイプの情報を持ってくる

13.
プロセスタイプごとに次に行う処理を決定する



GET_PERIPHERAL_USER：
1.
getPerioheralUsers()で周りのユーザの情報をリストに登録する

2.
getPerioheralUsers()内では一人ずつUserInfo型のオブジェクトを作成し、一人ずつリストに登録していく
メソッド内にはperipheralUserとperipheralUsersがあるため注意
前者はUserInfo型のオブジェクト、後者はそれらをまとめたリスト

3.
onGetPerioheralUser()からonGetPeripheralUsersInfo()を呼び出し、arrangeMarker()を呼ぶ

4.
マーカーの更新を行う

5.
 natRegisterDstUsers()を呼び出す
対象のユーザが自分と同一IP→同一NATに存在するためプライベートIP,Portでやり取りをする
対象のユーザが異なるIP→異なるNATに存在する端末の場合はパブリックIP、Portを使ってNAT通過
それぞれに意味のないメッセージを送る



DO_UDP_HOLE_PUNCHING：
1.getSrcUser()で


